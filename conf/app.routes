# microservice specific routes

# API
GET        /api/repository                            @uk.gov.hmrc.leakdetection.controllers.ApiController.repositories

GET        /api/report/:id                            @uk.gov.hmrc.leakdetection.controllers.ApiController.report(id: ReportId)
GET        /api/report/:id/leaks                      @uk.gov.hmrc.leakdetection.controllers.ApiController.reportLeaks(id: ReportId)
GET        /api/report/:id/warnings                   @uk.gov.hmrc.leakdetection.controllers.ApiController.reportWarnings(id: ReportId)
GET        /api/leaks                                 @uk.gov.hmrc.leakdetection.controllers.ApiController.leaks
GET        /api/:repository/:branch/report            @uk.gov.hmrc.leakdetection.controllers.ApiController.latestReport(repository: Repository, branch: Branch)
GET        /api/rules                                 @uk.gov.hmrc.leakdetection.controllers.ApiController.rules
GET        /api/rules/summary                         @uk.gov.hmrc.leakdetection.controllers.ApiController.ruleSummary
GET        /api/repositories/summary                  @uk.gov.hmrc.leakdetection.controllers.ApiController.repositorySummary(isBranchSummary: Boolean = false)
GET        /api/branches/summary                      @uk.gov.hmrc.leakdetection.controllers.ApiController.repositorySummary(isBranchSummary: Boolean = true)

# Webhooks
POST       /validate                                    @uk.gov.hmrc.leakdetection.controllers.WebhookController.processGithubWebhook

# Admin endpoints
GET        /admin/github-rate-limits                    @uk.gov.hmrc.leakdetection.controllers.AdminController.checkGithubRateLimits
GET        /admin/stats                                 @uk.gov.hmrc.leakdetection.controllers.AdminController.stats
GET        /admin/draft                                 @uk.gov.hmrc.leakdetection.controllers.DraftReportController.findAllDraftViolations()
DELETE     /admin/draft                                 @uk.gov.hmrc.leakdetection.controllers.DraftReportController.clearAllDrafts()
GET        /admin/draft/:ruleId                         @uk.gov.hmrc.leakdetection.controllers.DraftReportController.findAllDraftViolationsForRule(ruleId)
POST       /admin/rescan                                @uk.gov.hmrc.leakdetection.controllers.AdminController.rescan
GET        /admin/rescan/:repository/:branch            @uk.gov.hmrc.leakdetection.controllers.AdminController.rescanRepo(repository: Repository, branch: Branch, dryRun: Option[Boolean])